import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3, re, parameters, math, operacao

class OutputsPage():
	def __init__(self, master):
		self.master = master
		self.master.title('Resultado da simulação')
		self.frame_outputs = tk.Frame(self.master)
		self.frame_buttons = tk.Frame(self.master)
		self.frame_outputs.grid()
		self.frame_buttons.grid()
		self.inputsHeadLabel = tk.Label(self.frame_outputs, text = 'Dados de entrada')
		self.areaLabel = tk.Label(self.frame_outputs)
		self.texturaLabel = tk.Label(self.frame_outputs)
		self.transmissaoLabel = tk.Label(self.frame_outputs)
		self.potenciaLabel = tk.Label(self.frame_outputs)
		self.implementoLabel = tk.Label(self.frame_outputs)
		self.larguraLabel = tk.Label(self.frame_outputs)
		self.orgaoLabel = tk.Label(self.frame_outputs)
		self.linhasLabel = tk.Label(self.frame_outputs)
		self.velLabel = tk.Label(self.frame_outputs)
		self.profLabel = tk.Label(self.frame_outputs)
		self.passadaLabel = tk.Label(self.frame_outputs)
		self.condSoloLabel = tk.Label(self.frame_outputs)
		self.coefTransLabel = tk.Label(self.frame_outputs)
		self.parALabel = tk.Label(self.frame_outputs)
		self.parBLabel = tk.Label(self.frame_outputs)
		self.parCLabel = tk.Label(self.frame_outputs)
		self.parFLabel = tk.Label(self.frame_outputs)
		self.rangeLabel = tk.Label(self.frame_outputs)
		self.outputsHeadLabel = tk.Label(self.frame_outputs, text='Dados de saída')
		self.forcareqLabel = tk.Label(self.frame_outputs)
		self.potreqBTLabel = tk.Label(self.frame_outputs)
		self.potreqTDPLabel = tk.Label(self.frame_outputs)
		self.potdispTDPLabel = tk.Label(self.frame_outputs)
		self.fatorxLabel = tk.Label(self.frame_outputs)
		self.combEspLabel = tk.Label(self.frame_outputs)
		self.combHoraLabel = tk.Label(self.frame_outputs)
		self.eficCampoLabel = tk.Label(self.frame_outputs)
		self.capCampoTLabel = tk.Label(self.frame_outputs)
		self.capCampoELabel = tk.Label(self.frame_outputs)
		self.tempoLabel = tk.Label(self.frame_outputs)
		self.custoCombustivel = tk.Label(self.frame_outputs)
		self.custoOleo = tk.Label(self.frame_outputs)
		self.custoTratorista = tk.Label(self.frame_outputs)
		self.custoVariavel = tk.Label(self.frame_outputs)
		self.inputsHeadLabel.grid(row=0, column=0, padx=3)
		self.areaLabel.grid(row=1, column=0, padx=3)
		self.texturaLabel.grid(row=2, column=0, padx=3)
		self.transmissaoLabel.grid(row=3, column=0, padx=3)
		self.potenciaLabel.grid(row=4, column=0, padx=3)
		self.implementoLabel.grid(row=5, column=0, padx=3)
		self.larguraLabel.grid(row=6, column=0, padx=3)
		self.orgaoLabel.grid(row=7, column=0, padx=3)
		self.linhasLabel.grid(row=8, column=0, padx=3)
		self.velLabel.grid(row=9, column=0, padx=3)
		self.profLabel.grid(row=10, column=0, padx=3)
		self.passadaLabel.grid(row=11, column=0, padx=3)
		self.condSoloLabel.grid(row=12, column=0, padx=3)
		self.coefTransLabel.grid(row=13, column=0, padx=3)
		self.parALabel.grid(row=14, column=0, padx=3)
		self.parBLabel.grid(row=15, column=0, padx=3)
		self.parCLabel.grid(row=16, column=0, padx=3)
		self.parFLabel.grid(row=17, column=0, padx=3)
		self.rangeLabel.grid(row=18, column=0, padx=3)
		self.outputsHeadLabel.grid(row=0, column=1, padx=2)
		self.forcareqLabel.grid(row=1, column=1, padx=2)
		self.potreqBTLabel.grid(row=2, column=1, padx=2)
		self.potreqTDPLabel.grid(row=3, column=1, padx=2)
		self.potdispTDPLabel.grid(row=4, column=1, padx=2)
		self.fatorxLabel.grid(row=5, column=1, padx=2)
		self.combEspLabel.grid(row=6, column=1, padx=2)
		self.combHoraLabel.grid(row=7, column=1, padx=2)
		self.eficCampoLabel.grid(row=8, column=1, padx=2)
		self.capCampoTLabel.grid(row=9, column=1, padx=2)
		self.capCampoELabel.grid(row=10, column=1, padx=2)
		self.tempoLabel.grid(row=11, column=1, padx=2)
		self.custoCombustivel.grid(row=12, column=1, padx=2)
		self.custoOleo.grid(row=13, column=1, padx=2)
		self.custoTratorista.grid(row=14, column=1, padx=2)
		self.custoVariavel.grid(row=15, column=1, padx=2)

		self.quitButton = tk.Button(self.frame_buttons, text = 'Voltar', command=self.master.destroy)
		self.quitButton.grid()





